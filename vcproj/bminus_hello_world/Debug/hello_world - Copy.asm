; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.30319.01 

	TITLE	C:\Work\bminus\hello-world\hello_world.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	_write
PUBLIC	??_C@_0O@FDMDAIM@?$AAHello?5world?6?$AA@	; `string'
PUBLIC	_main
EXTRN	__imp__exit:PROC
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
;	COMDAT ??_C@_0O@FDMDAIM@?$AAHello?5world?6?$AA@
; File c:\work\bminus\hello-world\hello_world.c
CONST	SEGMENT
??_C@_0O@FDMDAIM@?$AAHello?5world?6?$AA@ DB 00H, 'Hello world', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT rtc$TMZ
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odsp /RTCsu /ZI
rtc$IMZ	ENDS
;	COMDAT _main
_TEXT	SEGMENT
_main	PROC						; COMDAT

; 3    : main() {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	push	48					; 00000030H
	pop	ecx
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 4    : 
; 5    :     write("\0Hello world\n");

	push	OFFSET ??_C@_0O@FDMDAIM@?$AAHello?5world?6?$AA@
	call	_write
	pop	ecx

; 6    :     exit(0);

	mov	esi, esp
	push	0
	call	DWORD PTR __imp__exit
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@main:

; 7    : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	leave
	ret	0
_main	ENDP
_TEXT	ENDS
EXTRN	__imp__fputc:PROC
EXTRN	__imp____iob_func:PROC
; Function compile flags: /Odsp /RTCsu /ZI
;	COMDAT _write
_TEXT	SEGMENT
_i$ = -8						; size = 4
_str$ = 8						; size = 4
_write	PROC						; COMDAT

; 11   : write(char str[]) {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	push	51					; 00000033H
	pop	ecx
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 12   : 	int i;
; 13   : 
; 14   : 	i = 0;

	and	DWORD PTR _i$[ebp], 0
$LN2@write:

; 15   : 	while (str[i] != 0) {

	mov	eax, DWORD PTR _str$[ebp]
	add	eax, DWORD PTR _i$[ebp]
	movsx	eax, BYTE PTR [eax]
	test	eax, eax
	je	SHORT $LN3@write

; 16   : 		fputc(str[i], stdout);

	mov	esi, esp
	call	DWORD PTR __imp____iob_func
	cmp	esi, esp
	call	__RTC_CheckEsp
	add	eax, 32					; 00000020H
	mov	esi, esp
	push	eax
	mov	eax, DWORD PTR _str$[ebp]
	add	eax, DWORD PTR _i$[ebp]
	movsx	eax, BYTE PTR [eax]
	push	eax
	call	DWORD PTR __imp__fputc
	pop	ecx
	pop	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp

; 17   : 		i = i + 1;

	mov	eax, DWORD PTR _i$[ebp]
	inc	eax
	mov	DWORD PTR _i$[ebp], eax

; 18   : 	}

	jmp	SHORT $LN2@write
$LN3@write:

; 19   : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	leave
	ret	0
_write	ENDP
_TEXT	ENDS
END
